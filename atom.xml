<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一叶知秋</title>
  
  <subtitle>个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lixiansen2048.github.io/"/>
  <updated>2019-07-23T02:51:18.637Z</updated>
  <id>https://lixiansen2048.github.io/</id>
  
  <author>
    <name>李艳祥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode第475题：供暖器</title>
    <link href="https://lixiansen2048.github.io/2019/07/23/my-first-post/"/>
    <id>https://lixiansen2048.github.io/2019/07/23/my-first-post/</id>
    <published>2019-07-23T02:33:38.000Z</published>
    <updated>2019-07-23T02:51:18.637Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-二分查找专题"><a href="#LeetCode-二分查找专题" class="headerlink" title="LeetCode 二分查找专题"></a>LeetCode 二分查找专题</h1><h2 id="李"><a href="#李" class="headerlink" title="李"></a>李</h2><h3 id="李-1"><a href="#李-1" class="headerlink" title="李"></a>李</h3><h4 id="李-2"><a href="#李-2" class="headerlink" title="李"></a>李</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> List<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">findRadius</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> houses<span class="token punctuation">:</span> List<span class="token punctuation">[</span>int<span class="token punctuation">]</span><span class="token punctuation">,</span> heaters<span class="token punctuation">:</span> List<span class="token punctuation">[</span>int<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> int<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 存放每个房屋与加热器的最短距离</span>        res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 排序</span>        houses<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>        heaters<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> c <span class="token keyword">in</span> houses<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 二分查找，在heaters中寻找与房屋 c 最近的加热器</span>            left <span class="token operator">=</span> <span class="token number">0</span>            right <span class="token operator">=</span> len<span class="token punctuation">(</span>heaters<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>            <span class="token keyword">while</span> left <span class="token operator">&lt;</span> right<span class="token punctuation">:</span>                mid <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">1</span>                <span class="token keyword">if</span> heaters<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> c<span class="token punctuation">:</span>                    left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    right <span class="token operator">=</span> mid            <span class="token comment" spellcheck="true"># 若找到的值等于 c ，则说明 c 房屋处放有一个加热器，c 房屋到加热器的最短距离为 0</span>            <span class="token keyword">if</span> heaters<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">==</span> c<span class="token punctuation">:</span>                res<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 若该加热器的坐标值小于 c ，说明该加热器的坐标与 c 之间没有别的加热器</span>            <span class="token keyword">elif</span> heaters<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&lt;</span> c<span class="token punctuation">:</span>                res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>c <span class="token operator">-</span> heaters<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 若该加热器的坐标值大于 c 并且left不等于 0 ，说明 c 介于left和left-1之间，</span>            <span class="token comment" spellcheck="true"># 房屋到加热器的最短距离就是left和left - 1处加热器与 c 差值的最小值</span>            <span class="token keyword">elif</span> left<span class="token punctuation">:</span>                res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>min<span class="token punctuation">(</span>heaters<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">-</span> c<span class="token punctuation">,</span> c <span class="token operator">-</span> heaters<span class="token punctuation">[</span>left <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>heaters<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">-</span> c<span class="token punctuation">)</span>        <span class="token keyword">return</span> max<span class="token punctuation">(</span>res<span class="token punctuation">)</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode-二分查找专题&quot;&gt;&lt;a href=&quot;#LeetCode-二分查找专题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode 二分查找专题&quot;&gt;&lt;/a&gt;LeetCode 二分查找专题&lt;/h1&gt;&lt;h2 id=&quot;李&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="leetcode 题解" scheme="https://lixiansen2048.github.io/categories/leetcode-%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="二分查找" scheme="https://lixiansen2048.github.io/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    
      <category term="python 3" scheme="https://lixiansen2048.github.io/tags/python-3/"/>
    
  </entry>
  
</feed>
